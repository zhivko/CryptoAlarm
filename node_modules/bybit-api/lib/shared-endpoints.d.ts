import { APIResponse, AssetExchangeRecordsReq, CoinParam, SymbolInfo, SymbolLimitParam, SymbolParam, SymbolPeriodLimitParam, WalletFundRecordsReq, WithdrawRecordsReq } from './types/shared';
import { GenericAPIResponse } from './util/requestUtils';
import RequestWrapper from './util/requestWrapper';
export default class SharedEndpoints {
    protected requestWrapper: RequestWrapper;
    /**
     *
     * Market Data Endpoints
     *
     */
    getOrderBook(params: SymbolParam): GenericAPIResponse;
    /**
     * Get latest information for symbol
     */
    getTickers(params?: Partial<SymbolParam>): GenericAPIResponse;
    getSymbols(): Promise<APIResponse<SymbolInfo[]>>;
    /**
     *
     * Market Data : Advanced
     *
     */
    getOpenInterest(params: SymbolPeriodLimitParam): GenericAPIResponse;
    getLatestBigDeal(params: SymbolLimitParam): GenericAPIResponse;
    getLongShortRatio(params: SymbolPeriodLimitParam): GenericAPIResponse;
    /**
     *
     * Account Data Endpoints
     *
     */
    getApiKeyInfo(): GenericAPIResponse;
    /**
     *
     * Wallet Data Endpoints
     *
     */
    getWalletBalance(params?: Partial<CoinParam>): GenericAPIResponse;
    getWalletFundRecords(params?: WalletFundRecordsReq): GenericAPIResponse;
    getWithdrawRecords(params: WithdrawRecordsReq): GenericAPIResponse;
    getAssetExchangeRecords(params?: AssetExchangeRecordsReq): GenericAPIResponse;
    /**
     *
     * API Data Endpoints
     *
     */
    getServerTime(): GenericAPIResponse;
    getApiAnnouncements(): GenericAPIResponse;
    getTimeOffset(): Promise<number>;
}
